/* displayプロパティの値をgridまたはinline-gridとすることで、 */
/* その要素はGrid Layoutのコンテナとなる。 */

/* コンテナの子要素はアイテムとなる。 */

/* グリッドを分ける垂直および水平の線のことをラインと呼ぶ。 */
/* グリッドの行および列のことをトラックと呼ぶ。 */
/* アイテムを配置できる最小の単位をセルと呼ぶ。 */
/* １つ以上のセルの集まりのことをエリアと呼ぶ。 */

/* エリアには名前を付けることができ、アイテムを配置できる。 */

body * {
  border: 1px solid red;
}

#container {
  display: grid;
  /* 縦５列、横２列のセルを形成する */
  /* １列目の幅は150px、２列目の幅は残りを埋める長さ。 */
  grid-template-rows: 50px 50px 100px 150px 50px;
  grid-template-columns: 100px 1fr;
}

/* Grid Rayoutアイテムが表示されるエリアは */
/* 何番目のラインに挟まれているかによって指定する。 */

/* 上端や左端のラインが１番目のラインとなる。 */

/* エリアの長さを１トラックとする場合、スラッシュ以降を記述する必要はない。 */

header {
  grid-row: 1;
  grid-column: 1/3;
}

/* スラッシュの後には、いくつ先のラインまでをエリアの長さとするかを */
/* 指定することもできる。 */

#item1 {
  grid-row: 2 / span 3;
  grid-column: 1;
}

#item2 {
  grid-row: 2;
  grid-column: 2;
}

/* 負の数を指定した場合、ラインを右端や下端から-1、-2......と数える。 */
/* ただし、アイテムの左上が指定したラインに合うように配置される。 */

#item3 {
  grid-row: -4;
  grid-column: -2;
}

#item4 {
  grid-row: 4;
  grid-column: 2;
}

footer {
  grid-row: 5;
  grid-column: 1/3;
}
